name: Build & Test Hero Collator

on:
  pull_request:
    types: [opened, synchronize]
    branches: [main]
  push:

env:
  GCP_PROJECT_ID: "paid-network-202104"
  ZOMBIENET_VERSION: "v1.2.36"
  POLKADOT_VERSION: "v0.9.24"
  K3S_VERSION: "v1.21.2-k3s1"

jobs:
  quality:
    runs-on: gcp-self-hosted-runner
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-taplo-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --git https://github.com/drahnr/taplo.git --branch all taplo-cli

      - name: 🫠 taplo fmt 🫠
        run: taplo fmt --check

      - name: 🫠 rustfmt 🫠
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check

      - name: 📎 clippy 📎
        uses: actions-rs/cargo@v1
        with:
          command: clippy

      - name: 🃏 check 🃏
        uses: actions-rs/cargo@v1
        with:
          command: check

  build-hero-collator:
    needs: [quality]
    if: true
    runs-on: gcp-self-hosted-runner
    outputs:
      IMAGE: ${{ env.IMAGE }}

    steps:
      - uses: actions/checkout@v2
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0.6.0
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configuring Docker credentials
        run: gcloud auth configure-docker

      - name: ⚡ Cache Cargo Artifacts & Release Target ⚡
        if: true
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: 🤖 Building Collator 🤖
        if: true
        run: |
          source ~/.cargo/env && cargo build --release
          IMAGE_TAG=$(target/release/hero --version | cut -d' ' -f2)
          echo "IMAGE=gcr.io/${{ env.GCP_PROJECT_ID }}/hero-collator:$IMAGE_TAG" >> $GITHUB_ENV

      - name: 🚀 Tag & Publish Image 🚀
        if: true
        run: |
          docker build -f build/scripts/Dockerfile -t ${{ env.IMAGE }} .
          docker push ${{ env.IMAGE }}

  run-zombienet-tests:
    if: false
    needs: [build-hero-collator]
    runs-on: gcp-self-hosted-runner
    env:
      IMAGE: ${{ needs.build-hero-collator.outputs.IMAGE }}

    steps:
      - name: Launch K3s Cluster
        uses: debianmaster/actions-k3s@master
        id: k3s
        with:
          version: ${{ env.K3S_VERSION }}
      - run: kubectl get nodes

      - name: 🧟‍♂️ Install Zombienet 🧟‍♂️
        run: |
          wget https://github.com/paritytech/zombienet/releases/download/${{ env.ZOMBIENET_VERSION }}/zombienet-linux
          chmod +x ./zombienet-linux

      - name: 🥷🏻 Run Zombienet Tests 🥷🏻
        run: |
          ./zombienet-linux -p kubernetes test zombienet_tests/smoke/simple-network.feature

  cleanup:
    if: always()
    needs: [run-zombienet-tests]
    runs-on: gcp-self-hosted-runner
    steps:
      - run: docker rm -f k3s-${{ env.K3S_VERSION }} || true
